#########useful links#################
https://github.com/mskcc
https://github.com/d-j-e/SNPPar
https://hpc.nih.gov/training/gatk_tutorial/vqsr.html#benchmarks-of-applyvqsr
https://github.com/ESR-NZ/nz-sars-cov2-variants
########useful installation############
If you meet the problem "libgfortran.so.4: cannot open shared object file: No such file or directory", you may try 
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get update
sudo apt-get install gcc-7 g++-7
gcc-7 --version
sudo apt-get install gfortran-7
this works on ubutu16
how to conda in grid
1. srun -p prip -t 1:0:0 --mem=20G --pty bash
2. conda create --name prokka
3. conda activate prokka
4. conda install -c conda-forge -c bioconda -c defaults prokka.
#######useful bash######################
awk '{print > $1".txt"}' file1 #to print every row to diffrent files based on the first colum.
awk '{if($2<=500)print > "500L.txt";else print > "500G.txt"}' file1 #to print every row to diffrent files based on the second colum.
awk '{for(i=2; i<=NF; i++) print $1 "\t" $i > "column" i ".txt"}' file1 # print every column to files
awk '{ for(i=2; i<=268;i++) j+=$i; print $1 "\t"j ;j=0 }' file1 #sum every row
awk '{split($0,a);asort(a);mid=int(NF/2);NF%2!=0?median=a[mid+1]:median=(a[mid]+a[mid+1])/2;print median}' file.txt #calcuate median for each row, no annotate column
sed -n 'ADDRESS'p filename or sed -n '/PATTERN/p' filename # print lines address is number line; pattern is a text word
sed -i  ':a;N;$!ba;s/\n/_/g' # change newline to underline
sed 's/\(.*\)_/\1 /' # replace the last dash
sed  -i '1i text' filename # insert before first line
for f in *.gal; do ~/src/create_APmatrix_copyformat.com $f toal.OG.list.re; sed -i '1i '$f' \t '$f'' $f.ok; done # create copy number
sed 'p;p;p;p' $1 # will repeat the lines five times
sed '/^##FASTA/Q' w.gff > nosequence.gff # remove contig sequences
sed -ne '/pattern/,$ p' # print all lines after matched pattern
awk '{k=$1=$1; sub(k,x); A[k]=A[k] $0} END{for(i in A)print i A[i]}' # convert two columns to a matrix
awk '{sum = 0; for (i = 1; i <= NF; i++) sum += $i; sum /= NF; print sum}' # calclaute mean for each row
awk '{a[$1]+=$2}END{for(i in a) print i,a[i]}' $1 # sum the second column based on the groups in the first column
awk 'NF{NF-=1};1' # remove the last column
awk '{seen[$1]+=$2; count[$1]++} END{for (x in seen)print x, seen[x]/count[x]}' $1  #average the second column based on the groups in the first column
datamash -t' ' --sort --group 1 mean 2 <file1> # datamash can do mathmatics same as the above
awk '{ for (i=1;i<=NF;i+=2) print $i }' file > test # print odd 
awk '{ for (i=2;i<=NF;i+=2) $i="" }1' file > test # print odd
###########useful R############
aggregate(d$auc_e, list(d$ST), mean) # calcualte mean (d$auc_e) based on the group (d$ST)
g <- ggplot(plot.df, aes(x=as.factor(type), y=w, group=nf)) + geom_boxplot(aes(fill=type, nf)) + facet_wrap(~founder, nrow=6, ncol=5, scales="free") + xlab("Competitors (by founder)") + ylab("Relative fitness") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) # boxplot
